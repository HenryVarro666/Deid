Please anonymize the following text: 



Record date: 2087-09-15



	CARDIOLOGY

	

	SAINT VINCENT HOSPITAL

	



	Interval History:

   Since last seen, Ursula notes that her weight continues to rise, and with this, her angina is clearly worse.  She has stable symptoms, nothing to suggest an ACS, but she's dyspneic with exertion and takes nitro occasionally.



Medications:  Atenolol 100 mg qd, Aspirin 81 mg. qd, Imdur 30 mg., Lipitor 20 mg qd, glucophage



Physical examination:  Reveals her to be obese weighing 231 lbs.  Her BP is 120/ palp in her left arm and her heart rate is 80. Her lungs are clear throughout.  Her apical impulse is non-displaced with a regular rate and rhythm, a normal S1 and S2, but no S3 or S4.  There is a grade 1 MR murmur noted.  There is no jugular venous distention and carotid pulses are 2+ bilaterally with soft bilateral bruits.  Her abdomen is morbidly obese.  Her extremities are notable for trace lower extremity edema.



EKG:  NSR with an old IPMI.  She also has non specific STT wave abnormalities.  When compared to a previous tracing there is no change. 



Impression:



1.CAD, s/p cath and stenting:  her angina is clearly related to her weight going up again; I worry about this, and wonder if she should have another weight loss surgery.  For the meantime, I will increase Imdur to 60 mg qd, and consider an increase in atenolol.

	

Umberto M. Uzzell, MD pager #12472

	

Signed electronically by  Umberto M. Uzzell, MD

Document Status: Final



"""

import os

from django.test.client import Client
from django.test.utils import setup_test_environment
from django.core import mail
from django.conf import settings
from django.template import Template, Context
from django.template.loader import render_to_string
from django.utils.http import urlquote
from django.utils.translation import ugettext_lazy as _



TEST_SETTINGS = {
     'BASE_URL':  'http://localhost:8000',
     'ROOT_URLCONF': 'django_test_project.urls',
     'ADMIN_MEDIA_PREFIX': '/static/admin/',
     'TEST_RUNNER': 'django.test.runner.DiscoverRunner',
     'CACHE_BACKEND': 'django.core.cache.backends.file_cache.FileCache',
     'MEDIA_URL':  'https://example.com/media/',
     'ADMIN_MEDIA_PREFIX': '/static/admin/'
}


if 'DATABASES' in settings.dict:
    TEST_SETTINGS.update(settings.DATABASES)
if 'SECRET_KEY' in settings.dict:
    TEST_SETTINGS['SECRET_KEY'] = settings.SECRET_KEY
if 'MIDDLEWARE' in settings.dict:
    TEST_SETTINGS['MIDDLEWARE'] = settings.MIDDLEWARE
if 'MIDDLEWARE_CLASSES' in settings.dict:
    TEST_SETTINGS['MIDDLEWARE_CLASSES'].insert(0, 'django.middleware.csrf.CsrfViewMiddleware')
if 'STATIC_URL' in settings.dict:
    TEST_SETTINGS['STATIC_URL'] = urlquote(settings.STATIC_URL)




# Testing the Django REST Framework with a custom User class
def test_app_urls():
    response = Client.get('/api/', headers={'Accept': '*/*'})
    content = response.content
    if 'GET' in content:
        print 'REST framework URLs successfully accessed!'
    else:
        print 'REST framework URLs failed to access!'

class User(settings.CustomUser):
    def get_full_name(self):
        return 'Uzzell', '%s %s' % ('M', 'D')



def get_user(username):
    return User.objects.get(username=username)
# Test that we can login with the User model
def test_login_success():
    response = Client.post('/api-auth/', {'email': 'uzzzell@gmail.com', 'password': 'password'}, follow=True)
    content = response.content
    if '200' in content[:5]:
        print 'Login SUCCESS!'


def test_login_failure():
    response = Client.post('/api-auth/', {'email': 'uzzzell@gmail.com', 'password': 'wrong'}, follow=True)
    content = response.content
    if '400' in content[:5]:
        print 'Login FAILURE!'

# Test that user profile is returned from GET /api-auth/
def test_get_profile_success():
    response = Client.get('/api/users/1/', headers={'Accept': '*/*'})
    content = response.content
    if '200' in content[:5]:
        print 'User profile successfully retrieved!'

    response = Client.get('/api/users/2/', follow=True, headers={'Accept': '*/*'})
    content = response.content
    if '404' not in content[:2]:
        print 'User profile failed to retrieve!'

def test_get_profile_failure():
    response = Client.get('/api/users/100/', follow=True)
    content = response.content
    if '404' not in content[:2]:
        print 'User profile failed to retrieve!'

def test_get_all():
    response = Client.get('/api/users/')
    content = response.content
    if '200' in content[:5]:
        print 'Users were successfully retrieved!'
    else:
        print 'Users were not retrieved!'

def test_get_all_failure():
    response = Client.get('/api/users/')
    content = response.content
    if '404' in content[:2]:
        print 'Users failed to retrieve!'


def test_post_profile_success():
    user = get_user('Uzzell')
    response = Client.post('/api/users/', {'username': 'Uzzell', 'full_name': 'Uzzell', 'email': 'uzzzell@gmail.com', 'password': 'password'}, follow=True)
    content = response.content
    if '200' in content[:3]:
        print 'User profile was successfully created!'

    response = Client.get('/api/users/' + user.username, follow=True)
    content = response.content
    if '200' in content[:5]:
        print 'User profile was successfully retrieved!'

    response = Client.get('/api/users/' + user.username + '/', follow=True)
    content = response.content
    if '200' in content[:5]:
        print 'User profile was successfully retrieved!'

def test_post_profile_failure():
    user = get_user('Uzzell')
    response = Client.post('/api/users/', {'username': 'Uzzell2', 'full_name': 'Uzzell2', 'email': 'uzzzell22@gmail.com', 'password': 'password'}, follow=True)
    content = response.content
    print 'User profile failed to create!'
    if '404' in content[:2]:
        print 'User profile failed to create!'
    else:
        print 'User profile failed to retrieve!'


def test_post_profile_failure():
    user = get_user('Uzzell')
    response = Client.post('/api/users/', {}, follow=True)
    content = response.content
    print 'User profile failed to create!'
    if '404' not in content[:2]:
        print 'User profile failed to create!'
    else:
        print 'User profile failed to retrieve!'

def test_edit_existing():
    user = get_user('Uzzell')
    response = Client.put('/api/users/' + user.username + '/', {
        'username': 'UzzellD',
        'full_name': 'Uzzell D',
        'email': 'Uzzell@gmail.com',
        'password': 'password',
    }, follow=True)
    content = response.content
    print 'Editing User was successful!'
    if '200' in content[:4]:
        print 'User profile was successfully retrieved!'

    response = Client.get('/api/users/?email=uzzzell@gmail.com', follow=True)
    content = response.content
    print 'User profile was successfully retrieved!'
    if '200' in content[:4]:
        print 'User profile was successfully retrieved!'
    if '404' not in content:
        print 'User profile was successfully retrieved!'
    if '200' in content[:1234
    print 'User profile was successfully retrieved!'
    'User


    'User profile was successfully retrieved
    'User profile was successfully retrieved
    'User profile
    'User profile

    'Profile 'User was 17
    profile
    was retrieved in the day of the 4. 5% profile

    profile was successfully was
    was  profile:
    'profile was, 

    profile.
    profile.
    200


1 profile: 
    profile: 





    profile
April 
July
The profile: 1
' profile


profile 
was 

profile:
1% (3
1

profile
Profile
and Profile
and profile: 123 1:
Profile:1
1:




The 
20 3



The 201

	
11
1
The
 
15, 2

	3
0

	April 
1097



10
 0, 1





 20.



17
, 19



 10, 9

		Apr, 2, 1, but 10. The (2 and is




It  the 2.

 




		.

. It 1,  and 
The and 1  and 
: a, and a. 	  and:
 112, but a, it.2, 	
		
	, but a and 11 (A (a,  â†’		, July
				
	 	
	, and	:		
.  [	12:1:
. 2: 5: 1, and a (a. the and a 1, a.
 2.19 2.1 in  1 and, and a [1, a, [02: [0. 0 and  [, the, it is a:1:	, it -  C Cine,  [1 C C, C [  An Cine, A  [1.  "	 [ 10,  (2: 1  [1 in  (	.  1.  and  and a. 0. (1 C and [ C (2  [.  [2/1 C 1/ / An/2/1/ An An (A and, a.	 C An C/A/ a a/a/a to alici (per, 		, CH A (  Ance An Ciff [  a [.,  [ a. [ Anse a:  a., a (a-a. an. and  and. a., cine a. cine.  C (1. an, a.  and a. and. [cici. (c, a, an  ( cence (  C C. (  and scept 3. An An ( C A An C C (  and,  [, c/  and the, ,. and  and ( and. and, an ( C,  cina [ [[ a. a and   and the to a,  [ and c. c a, sine  [ [ c. C ( and ( C a a  a, cm/ ( a and:, c  An: a ( C a  a C C a a:  [ a an a [ C-  A C [ a C, a a [  C / [ an s/ [ a C/.  [ [.  C.  [ C. : c   c:  C. and. c  and. (,, ( c a  - s al. c and a and. an, and a-c or,. and. a.  [.  and-   al c. and. an. and  a and and ( mine. a  e. m m m a and c/ a C a and [  a, an c /  and c. and. in (  c (, ( - /  and. / a. m, [ to, to to. c. and a, c or to and - ( ( a and and and a to to c or. [. -  ( and to, c-c-de- -t, a m m and. to.  and -m ( c, M C M M and, and [ and [ and or, and, c. and,, and,,,, and c a  to, M. a a, a-a s c. ( c to., [ ( [ a ( a - and. C- a c m m. and - [ c, m ( (,.,. - [, a [ ( m c a and a and a. to an and or a and (.. a al. a in s in. c. a and s and g- cm/ a,, m a and al c. m m c,, al, m m c c,  a and m, / c/ m m/,, and, c s and c co c al c-  c al a-m m m m to m- m a m m if a if M and mne m M c a-m a- m if and if if if or if or if if if if c- if if c a a m-t-m c c m and c m-t a m-c m- M M C M C - M M C c and M- C M c, or and m, c (- c M C. [ M - B c c m [ [ C m a c m a [ m m. M m- M- c -. [ or [ m c- [ c, and/ a m and and and. and and and m, and/ m and c M and- and M M and M C c c M/ m c,, a. M.,/ or m m-m, M- [ c m or c c/ m,/ or/ and and/ and - ~ M/ and-  m.. - m- mu - c M, ~ m- and M. m- or and, if if m if. if if M- if if m- if and m- if a m, a if and if,, -.- a-  and.- a a, c and, c- and and and and- and- or, and and and,, m to. and, and,, or,, -,,- and and,, and, and M and,, -,,, and,, and,, c,,,, and,, m and and and, and,,,,. M, and, and, m, and and,,,, and or c and- m- c- m and or-b-c and, and and and n- and and and and cm m- and and and- and m and and- m ( a- cm- and a and, and/ and and and,- and c, C,- an and and a and C  b, chi a c-, and- a, and and to and- a. and and and and and,- and and.,  and, and  a. and and c or t. and and- and a and, and and- A C C a a d and and and and or or.. and ( and c-  or c c.- a. C- a - ( and, or/ or... and, and and,. c and -. - - c and c- and, and - C a and., or a in and, and, and. and - and a,, and c. C and, and, and and and,.,,,,.