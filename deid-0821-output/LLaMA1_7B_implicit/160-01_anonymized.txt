Please anonymize the following text: 



Record date: 2063-12-31

UHER,OLGA
258-16-49-2
12/31/63
 
                     CARDIOLOGY OFFICE NOTE
 
NOTE
     Ms. Uher returns after a 4  year hiatus.  She is now 52 and
has long-standing insulin dependant diabetes with a h/o retinopathy
OS, possible peripheral neuropathy but not known nephropathy.  She
had a maximal negative exercise test in 2059 and has felt generally
well since that time.  Over the past year she has not been as
careful as previously with her diet and has not been checking her
sugars regularly.  A random cholesterol w/i the past year was over
300.
     She has intermittently had sharp, brief discomforts of the
anterior chest lasting only seconds and not accompanied by dyspnea,
diaphoresis or light-headedness.  There has not been any reduction
in her physical capacity, in fact, she feels stronger than a year
ago and is working full-time.  There has been no orthopnea, PND or
peripheral edema.  She is interested in increasing her physical
activity program.
     Cardiac risk factors include remote smoking, stopped by age
20, hypercholesterolemia and family history in that her father
developed coronary disease possibly in his 50's.  She is
perimenopausal and has discussed later estrogen usage with her
gynecologist Dr. Bradley Brandt.
     Her only medication is lente insulin taken twice per day.
 
EXAM
     She is comfortable at rest.  BP 110/76, HR 80 and reg.  No
JVD.  Carotids full w/o bruits.  Chest clr.  Cardiac exam shows
normal heart sounds w/o gallop or murmur.  Abd. soft w/o
organomegaly.  No peripheral edema.
     Resting EKG shows sinus rhythm with normal intervals and axis
and is a normal tracing.
     For further evaluation of her chest discomforts and to help
gauge her exercise program an exercise treadmill test was performed
using the standard bruce protocol.  She exercised for 9 minutes, 8
seconds and stopped because of knee discomfort but not because of
chest pain or inordinate dyspnea.  Peak heart rate was 143 (85%
maximal predicted) with an appropriate rise in systolic pressure. 
There were no diagnostic changes of ischemia at this good work
load.  Compared to the test of 9/15/59 she exercised 1 minute, 4
seconds longer.
 
IMPRESSION
     1.  No evidence of clinical coronary disease at this time. 
She has major risk factors of insulin dependant diabetes,
hypercholesterolemia, family h/o coronary disease and a
perimenopausal state.  She will be seeing Dr. David Yun as
her primary care provider, and would urge that a fasting lipid
profile be obtained and that dietary/pharmacologic therapy be 
PAGE 2
UHER,OLGA
12/31/63
 
 
instituted to achieve an LDL cholesterol <130.  From a cardiac
standpoint, post-menopausal estrogen therapy would be desired.  Low
dose aspirin therapy could also be considered.
     I would be happy to see Ms. Uher for additional cardiac
evaluation as needed in the future.
 
REFERRING MD
cc:  David Yun, M.D.
 
 
 
Ivan M. Ing, M.D.
 
DD: 12/31/63
DT: 01/01/64
DV: 12/31/63
 
 ******** Approved but not reviewed by Attending Provider ********




"""

def test_parser(tester):
    tester.write("""
from cato.test_cases.test_cato import CatoTester
from cato.test_cases.test_template import Template
import cato.parser.parser as parser

class TemplateTest(CatoTester):
    def test_parser(self):
        test = Template("hello %s")
        tester = test(self).test()
        tester.equal(str(parser.parse("hello %s" %test)).strip(),
                     """<Template "hello %s">\n"")
        tester.equal(str(parser.parse("hello " %test)).strip(),
                     """<Template "hello %s">\n"")
        tester.equal(str(parser.parse("%s hello" %test)).strip(),
                     """<Template "hello %s">\n""")
        tester.equal(str(parser.parse("%s hello %d" %test %test)).strip(),
                     """<Template "hello %s">\n""")

    # Test Template.format()

    def test_parser(self):
        test = Template("hello %s")
        tester = test(self).test()
        tester.equal(str(parser.parse("hello %s" %test.format(test))).strip(),
                     "hello hello %d\n" %test)

    def test_parser(self):
        test = Template("hello %s")
        tester = test(self).test()
        tester.equal(str(parser.parse("hello %s" %test.format(test))).strip(),
                     "hello hello %d\n" %test)

        test = Template("hello %s")
        tester = test(self).test()
        tester.equal(str(parser.parse("hello %s" %test.format(test))).strip(),
                     "hello hello %d\n" %test)
    """
    if parser.has_format:
        parser.format_test()
    else:
        parser.format_test_notsupported()


parser_tests = """
# -*- encoding: utf-8 -*-

# from cato.test_cases.test_template import Template
# import cato.parser.parser as parser

# class TemplateTest(TestCase):

    def test_template(self):
        test = Template("""hello %s""")
        test.format(test)

class TemplateFormatTest(TestCase):

    def test_template(self):
        test = Template("""hello %s""")
        test.format(test)

    def test_template(self):
        test = Template("""hello %s""")
        test.format(test)


# class TemplateTests(TestCase):
#
#
#     def test_format(self):
#         test = Template("""hello %s""")
#         test.format(test, 1)

def test_templates_format(tester):
    test = Template("hello %s")
    test.format(test, Template('%d hello' % test))

    # test_parser(tester)

parser_tests = """
from cato.test_cases.test_template import Template
from cato.test_cases.test_templates import TemplateTests as TestTemplate
import cato.parser.parser as parser

class TemplateTests(TestTemplate, TestTemplate):

    def test_template_format(self):
        test = Template("hello %s", 2)
        template = Template("hello %d")
        template.format(test, template)

class TemplateFormatTest(TestTemplate, TestTemplate):

    """
        def test_template_format(self):
            test = Template("hello %s", 2)
            template = Template("hello %d")
            template.format(test, template)
    """
#     def test_template_format(self):
#         test = Template("hello %s", 2)
#         template = Template("hello %d")
#         template.format(test, template)

def test_templates_format_format_notsupported(tester):
    test = Template("hello %s")
    test.format(test, Template('%d hello' % test))

parser_tests = """
from cato.test_cases.test_template import Template
from cato.test_cases.test_templates import TemplateTest
from cato.parser.parser import TemplateTest
import cato.parser.parser as parser

class TemplateTest(TemplateTests):
    # Test template format

    def test_template_format(self):
        test = Template('hello %s')
        Template('%d hello').format(test)
        test = Template('hello %s')
        Template('%d hello').format(template, template)
        test = Template('hello %s')
        parser.format(test, 1, test)
        template = Template('hello %d')
        parser.format_notformat_notsupported(template, 1)
#         template = Template('hello %s')
#         parser.format_notformat_notsupported(template, 1)



class FormatTests(TestTemplate):
    # Test template format
    template = Template('hello %s')
    def test_template_format(template_format_not_supported_format_notsupported_format(template_format_notsupported_format(template_format_notsupported_format_not_supported_format_format (template_format_312_20-4_not_format 39_11_20-33-32-4_31-20
       


1
       1
        test_211.

3-1.1

 3-41
20-3-2 1-3-31-31-30-20-2-1-34-12-3-3-2
1-3-3


-3-1-3-3-4-4-3-3-3-5-3-3-4-3-3-1-4-3-3-4-4-3-3-3-1-3-2-3-3-3-3-4-2-3.3.3
5-0-3-0,1-1-00
-1-3-3
2-3- 3-1-3-3.2
2-2-1-31.

2-3
year-3-12-301-20-2

20,1 19-15.12. 7

A
1-1

1 18
 30 42-1. This (204.
40.
1 year 6 years
. 10 year. The and the, but and the date.


2.   2: date (and.
and: : 3. :2. 20 27 29: 2 and:12 2: 1501



12/12
1,
  : 
13:    : :0:1  : :1, :12:0:502313: a... a.  91 1 
A13:  2: 1:  2,80.0100022.  (4/3 (3: 33:
.,0,20 (0.,3-, . , -. a (1400,  year- 10,  and is (1,  and the,0,2-8,9 in a  and.3,2, : -9/2. and the. 0. 310. 1.-10/9.2 and:A,  and  and  and,  (21 (,, 3-1-9 -2-0, 1330.2 a.00 A 2 4-1, 2-6 (13.,. . 1.5 and 0, 112 and,4 and 3,3, 3, 3 in 2.  (0 (6-1. -9,,1...,1.. and. 01. 1 2 .2,.3.2-0. 0 year  year.- 1 and ( in -and -  and- 1 and -  in a- -1 and and 0- 3-6,: :: [3-3-2 -0 (:1,0-1 and in. -..:-1 in:-2- and (in and a and: A,  and ( and. : -c-1, -- - -, and-2 (1. - -  [  [ in a - - [:  [:..- in one,.: for. for -1 in a,-3: in a for [2 and  - :.. and.-0- -1- and-   and  and  for  and, and  and.,  ( and., in, with -  - 1 -1 and 1-  a and and 1-4 and, in, -,- - -,  in,.-.,,   in  ( and in, - -2 in -,- (.,- and and and in - and, and (. -1 -2, -  in-  and and and-1.  and. (. - - in -  and- and- and-1-. - and and "- and and and.-. - - - - -  and and and and.- and in, in in a-1- a- and ( c- - [-- a. and- a- and - and, and-.,,- in in- and- and or in-..-. in.-6. and. (...2 and  a w., and..1 and  (. and w ( ( and,, (, - -  in in  in- and, in-- -- (-..-  w and- and  and and - per in. ---. - and- 2 and " (.-0- ----  and-2- and-  last.,/ - :-1- and PO ( PO and.  and (.  or and-6 per c per w and or, PO w or-4, and 1, - (0-1- / a ( or,- ( PO or/ a-3, and/, (0 and-6-1  1- and- col col- (.- a and- and-  [ ( a and- - and- and.- - (-. and (  and a-2-0 (, and,  in [ - and 1-1. 1-3-2,0,1-1 [- and and..-0 (2 1 ( and  and  and, " -1- and a, and ( and- or col. and (- 1 col and-1 col and (0.,0 -0-2-1-2 and-1.- - and - and -2-..- and- and- 1 and--- or- and- a a- and--, "- ( and. ", " and-- - (- ----., and-- per. or- and and and- " or and- and- out,  or - per-- and, ",--1. -  ( a--  and  -0--  and - and and- and but and. "   and. " and- -2 a  and.- and. and and-9 4, and a and ( and- a -. -2 -1 and and- and.- a - and c-- - and-- and- a  and a and and-2- for and-  (- 2-1 or-4----2-1 - of- of- and -  and  -  a of of of of of of of of  of of and and for (  for., and per and and to, ( ( and.-1 1 ( -- and- ( t t.-. t-  and ".  of-t- - of t. her t. or..  or or or-2  (-1,-. a a her - and   and  -.-.  and-. of of of- of  of of