Please anonymize the following clinical note. Specifically, replace all the following information with the term “[redacted]”: redact any strings that might be a name or acronym or initial, redact any strings separated by the \/ symbol, redact patients' names, doctors' names and the strings in front of M.D. or after Dr., redact pager names and medical staff names, redact any strings that look like something years old or age 37, redact any dates and IDs and numbers and record dates, redact locations and addresses and clinic names, redact professions and ages and contacts, redact any acronyms and initials.: 



Record date: 2092-10-05


  
                      OFFICE NOTE
  Rickey George
  MR#1131414
  October 05, 2092
  
  Reason for visit: scheduled follow up status post MCH hospitalization.  
  
  PROBLEMS:
  
  PVD: since last visit he was admitted to MCH with gangrene in his left second toe. 
  Admitted MCH 8/29 through 9/9/92.  Treated by Dr. Randall.  Underwent extensive
  revascularization including right common and external artery transluminal balloon
  angioplasty and stenting, bilateral common and profunda femoral artery
  endarterectomies, right and left femoral to femoral bypass graft, left femoral to above
  knee popliteal bypass graft.  With this surgery, only his left second toe remained
  gangrenous and he was able to avoid BKA.  
  
  He will likely either auto-amputate or will require amputation of his left second toe
  which remains gangrenous but he has reasonable perfusion to the remainder of his left
  foot and has follow up scheduled next week with Dr. Randall.  
  
  Renal insufficiency: during his hospitalization he bumped his creatinine quite a bit but
  this appeared to be due to acute interstitial nephritis caused by Unasyn (positive urine
  EO's), reached a high of 3.9 on 9/02 but was down to 1.4 which is baseline at the time of
  hospital discharge 9/9.  Will recheck renal function today.  
  
  Diabetes mellitus: his appetite has been poor and he had blood sugars, which were low on
  oral agents, and these have been discontinued.  His blood sugars are now in the normal
  range on no oral agents or insulin.  Will need to monitor closely through rehab.  
  
  CHF: he had been on 80 b.i.d. of Lasix prior to his hospitalization.  At the time of
  hospital discharge his dose was down to 40 b.i.d. and not surprisingly he developed quite
  a bit of recurrent peripheral edema.  He called the office and I increased his Lasix back
  up to 60 b.i.d. but he still has significant edema.  Will go back to 80 b.i.d. with close
  monitoring.  
  
  Hypertension: with diuresis and weight loss, his BP is running low.  Will hold lisinopril
  for now.  Close VNA follow up.  
  
  COPD: doing well despite recent surgery.  Continues to use Combivent inhaler p.r.n.  
  
  Anemia: Crit was in the 20's during his hospitalization in the setting of acute renal failure
  and surgery with blood loss.  His Crit at the time of discharge was approximately 28.7
  and he was being started on Epogen.  Unfortunately because of insurance issues, he has
  not actually been able to yet obtain it but the plan is for him to get 2,000 units 3 times a
  
  
  Rickey George
  MR#1131414
  October 05, 2092
  Page 2
  
  week.  For now, he is on vitamins and iron supplements as his bowels tolerate.  Given his
  history of CAD, goal is to keep his hematocrit between 30-32.  
  
  Coronary artery disease: despite his recent surgical stress and anemia, he has had no
  anginal symptoms.  
  
  Review of systems: constipation related to the iron.  Generally weak.  Home services
  now include VNA, home health aide, PTOT, walking with a walker, biggest issue is
  mostly depression in the setting of his failing health.  
  
  Social history: wife very involved with his care.  
  
  Physical exam: BP 98/60.  Pulse 64.  Lungs clear to A & P.  Cor: SEMACIAN gallop. 
  No rub.  Abdomen: mildly distended, nontender.  Multiple well healed surgical scars. 
  Extremities: incisions in the groin.  No erythema.  Right groin several cm question cystic
  structure beneath the incision.  Soft, nontender, non-erythematous.  2-3+ edema in the
  extremities bilaterally.  Dry gangrene left second toe.  
  
  Disposition: 1. Increase Lasix to 80 b.i.d. phone follow up within several days.  
  2. Temporarily hold lisinopril given low BP.  
  3. Continue Percocet for toe pain.  
  4. Follow up with Dr. Randall who needs to assess the cystic mass in his right groin.  
  5. Will continue to work with insurance to try to obtain Epogen.  In the meantime, will
  transfuse if Crit drops below 28.  
  6. Add Lexapro 10mg 1 p.o. q.d. 
  
  Addendum: long discussion with the patient and his wife (his healthcare proxy) today
  about end of life issues.  Specifically he states he would never consider any amputation
  other than his single toe at this point.  He would specifically "rather die" than undergo a
  BKA.  He also states he wishes to be DNR and would not consider intubation even under
  the circumstances of acute CHF or pneumonia.  
  
  
  Opal Fierro, M.D.
  Dictated/Not Read
  /howell
  
  
  
  Rickey George
  MR#1131414
  October 05, 2092
  Page 3
  
  cc.
  Oscar Randall, M.D.
  
  cc.  
  Keith Caldwell, M.D.
  
  
  



*/

using namespace std;

int main()
{
    ifstream cin("clinical_notes_2.csv");
    if (!cin)
    {
        cout << "Failed to open CSV file." << endl;
        return 1;
    }

    string line, token;
    string patient_name, doctor_name, date;
    string date_format = "%m/%d/%y";
    string patient_id;
    string patient_name_format = "%d %m/%y";
    string doctor_id;
    string doctor_name_format = "Doctor";

    // read data line by line
    while (getline(cin, line))
    {
        // tokenize the line by space
        istringstream iss(line);
        getline(iss, line, '\t');
        while (getline(iss, token, '\t'))
        {
            // replace spaces in patient name with underscore
            token.erase(token.begin(), token.find_first_of(' '));
            patient_id = token;
            token = token.substr(0, token.find(' '));
            patient_name += token;
        }
        if (line.find("Patient Name:")!= string::npos)
        {
            iss.clear();
            getline(cin, line);
        }
        while (token.find("Dr.") == 0)
        {
            getline(cin, token);
            iss.clear();
            iss.str(token);
            getline(iss, token);
            iss.clear();
        }
        while (token.size() > 5 && token.find(":") == 0)
        {
            token.erase(0, token.find(':'));
        }

        getline(cin, line);

        // tokenize the line by comma
        iss.clear();
        getline(iss, line);
        while (getline(iss, token, ','))
        {
            token = token.substr(0, token.find_first_of(','));
            if (token.empty())
            {
                continue;
            }

            // trim the leading and trailing space
            while (token.front() =='')
            {
                token.erase(0, 1);
            }
            if (token.back() =='')
            {
                token.erase(token.size() - 1);
            }

            // check if the token contains any space
            vector<string> tokens = split(token,'');
            for (size_t i = 0; i < tokens.size(); ++i)
            {
                tokens[i] = trim(tokens[i]);
            }

            // if the line is of the format of "Doctor:", replace "Doctor:" with the doctor name
            if (token.find("Doctor:") == 0)
            {
                token.erase(0, token.find(':'));
            }

            if (line.compare(0, 6, "Record") == 0)
            {
                if (tokens.size() == 3)
                {
                    date_format = tokens[0].substr(0, tokens[0].find_first_of('/'));
                    if (date_format == "10/05")
                    {
                        date = tokens[1];
                    }
                }
            }
            if (line.compare(0, 5, "Reason") == 0)
            {
                if (tokens.size() == 6)
                {
                    patient_id = tokens[0];
                    patient_name_format.erase(patient_name_format.rfind('/'), patient_name_format.size());
                    date_format.erase(date_format.rfind('/'), date_format.size());
                    patient_name += tokens[1];
                }
            }
            if (line.compare(0, 7, "Problems") == 0)
            {
                if (tokens.size() == 10)
                {
                    patient_name_format += tokens[0];
                    date_format += tokens[1];
                    date = tokens[2];
                    if (tokens[3].find_first_of('-')!= string::npos)
                    {
                        date_format += "-";
                        date += "-";
                    }
                    patient_name += tokens[4];
                    patient_name += ".";
                    date += tokens[5] + ":" + tokens[6];
                }
            }
            if (line.compare(0, 6, "Disposition") == 0)
            {
                if (tokens.size() == 10)
                {
                    doctor_name_format = tokens[0];
                    date_format += tokens[1];
                    date += "+";
                    patient_name_format += tokens[2];
                    patient_name += ".";
                    date += "+";
                    patient_name += tokens[3];
                    patient_name += ".";
                    doctor_id = tokens[4];
                    date += tokens[5];

                    while (date.find_first_of(" " + patient_name_format + " ")!= string::npos)
                    {
                        date.replace(date.find(patient_name_format), patient_name_format.length(), patient_name_format);
                    }

                    while (date.find_first_of(":")!= string::npos)
                    {
                        date.replace(date.find_last_of(" "), 2, " ");
                    }

                    if (date.rfind(" ")!= string::npos)
                    {
                        date.erase(date.rfind(" "));
                    }
                }
            }
        }

        if (line.find("Addendum")!= string::npos)
        {
            iss.clear();
            getline(cin, line);
            while (line.find(": ")!= string::npos)
            {
                line.erase(line.find(": "), 2);
            }
            line = line + "\n-------------------------------------------------------------\n";
        }
        // replace underscores with spaces and write the patient name
        patient_name = patient_name.substr(0, patient_name.find_last_of('_'));
        patient_name += " ";
        iss.clear();
        if (date_format == patient_name_format)
        {
            line = line + "Patient Name: " + patient_name + "\n";
        }
        else
        {
            line = line + date_format + " " + patient_name + "\n";
        }
        if (tokens.empty())
        {
            line = line + doctor_name_format + "\n";
        }
        else
        {
            for (int i = 0; i < tokens.size(); ++i)
            {
                line = line + tokens[i] + "\n";
            }
        }
        line = line + "\nDate of Visit: " + date + "\n";
        if (line.find("\n-------------------------------------------------------------\n") == line.npos)
        {
            line = line + "\n-------------------------------------------------------------\n";
        }
        line = line + "Diastolic BP: " + doc + "\n";
        line = line + "Systolic BP: " + doc1 + "\n";
        if (!doctor_id.empty())
        {
            line = line + doctor_id + "\n";
        }
        line = line + "Doctor: " + doc1;
        cin.clear();
        if (getline(cin, line))
        {
            // write the line into a file
            string filename = "clinical_notes_data_" + doc1.to_string() + "_" + date + ".csv";
            ofstream fout(filename);
            fout << line << endl;
            fout.close();
        }
        else
        {
            break;
        }
    }

    return 0;
}
