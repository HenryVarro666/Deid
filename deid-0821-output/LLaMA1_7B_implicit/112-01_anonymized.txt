Please anonymize the following text: 



Record date: 2060-10-11

                     BCH EMERGENCY DEPT VISIT
 
HESS,CLARENCE H   643-65-59-5                 VISIT DATE: 10/11/60
HISTORY OF PRESENTING COMPLAINT:  The patient is a 46 year old male 
with complaints of chest pain and throat tightness.  The patient 
reported that he was stuck in traffic for about 12 hours last night 
and apparently got very tense.  He felt some heat from his car, 
thought that it was overheating, and then developed some chest pain 
and throat tightness.  He really described what seems to be 
fleeting chest tightness and no diaphoresis, no shortness of 
breath, and no arm numbness or tingling.  However, he did have one 
associated symptom of some throat tightness. 
PAST MEDICAL HISTORY:  The patient has had a stress test one year 
ago that was normal.  He had an echocardiogram at that time that 
was also normal. 
MEDICATIONS:  Claritin, Proventil, and cimetidine. 
ALLERGIES:  Morphine sulfate. 
PHYSICAL EXAMINATION:  VITAL SIGNS:  The patient is afebrile. 
Vital signs are normal.  HEENT:  Normal.  NECK:  Supple.  LUNGS: 
Clear bilaterally.  CARDIAC:  Regular rate and rhythm without 
murmur.  ABDOMEN:  Soft and non-tender.  EXTREMITIES:  Negative. 
No CVA tenderness. 
LABORATORY EVALUATION:  EKG shows normal sinus rhythm.  There is no 
change in his electrocardiogram.  Chest x-ray is clear.  CK is 155. 
Troponin is 0.13.  Electrolytes are normal.  BUN and creatinine are 
20 and 1.0.  Hematocrit is 39, white count normal. 
THERAPY RENDERED/COURSE IN ED:  The patient is a 46 year old male 
with a fleeting episode of chest pain and throat tightness while 
stuck in traffic.  He was seen at Southwest Texas Medical Center and 
then sent here appearing somewhat anxious, with a normal physical 
examination, normal EKG, normal chest x-ray, and normal metabolic 
panel.  Most likely low probability for ischemia.  Risk factors are 
also very low. 
DISPOSITION (including condition upon discharge):   The patient is 
going to be admitted to the Short Stay Unit for a rule out MI 
protocol and possibly for another ETT. 
___________________________________                    NE270/9072
VICTOR T. BONNER, M.D.  VB07                             D:10/11/60 
                                                       T:10/11/60 
Dictated by:  VICTOR T. BONNER, M.D.  VB07 
 ******** Not reviewed by Attending Physician ********




"""

def load_text(filename):
    text = []
    with open(filename, 'r') as f:
        for line in f:
            text.append(line)
    return text

def load_dict():
    d = {}
    for line in load_text('dict.txt'):
        line = line.strip()
        fields = line.split()
        if fields[2]:
            k = fields[1]
            d[k] = fields[2]
    return d

#
# Tests
#

def test_to_dict():
    test = {'text': 'This is a test string.', 'date': '2007-01-01'}

    test_dict = dict(dict([
        ('to_dict_test', 'Test string'),
        ('text', 'This is a test string.')
    ]).items())

    assert test_dict == test

def test_to_dict_list_of_lists():
    test = [
        ['This is a test string', '2007-01-01'],
        ]

    test_dict = dict(dict([
        ('to_dict_test', 'Test string'),
        ('text', 'This is a test string.')
    ]).items())

    assert test_dict == test

def test_dict_to_dict():
    d = dict(dict([('to_dict_test', 'Test string'), ('text', 'This is a test string.')]))
    test_dict = dict(d.items())

    assert test_dict == test

def test_dict_to_list():
    d = dict(dict([('to_dict_test', 'Test string'), ('text', 'This is a test string.')]))
    test_str = d['to_dict_test']
    assert test_str == test

def test_list_to_str():
    strs = ['This is a test string.', 'This is a test string!']
    strs_dict = dict(dict(strs.items()))
    strs_str = strs_dict['This is a test string']
    assert strs_str == 'This is a test string'

def test_dict_to_dict():
    d = dict(dict([('to_dict_test', 'Test string'), ('text', 'This is a test string.')]))
    test_dict = d.to_dict()
    assert test_dict == test

def test_dict_to_dict_list_of_dictionaries():
    d = dict(dict([
        ('to_dict_test', 'Test string'),
        ('text', 'This is a test string.')
    ]))
    test_dict = d.to_dict()
    assert test_dict == test

def test_str_to_dict():
    strs = ['This is a test string.', 'This is a test string!']
    test_dict = dict(dict(strs.items()))
    assert test_dict == test

def test_dict_to_str():
    strs = dict(dict(
        ('to_dict_test', 'Test string'),
        ('text', 'This is a test string.')
    ))
    test_str = strs['to_dict_test']
    assert test_str == test




